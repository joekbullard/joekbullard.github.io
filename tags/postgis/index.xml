<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>postgis on Joe k Bullard</title>
    <link>https://joekbullard.github.io/tags/postgis/</link>
    <description>Recent content in postgis on Joe k Bullard</description>
    <image>
      <url>https://joekbullard.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://joekbullard.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 21 Nov 2022 01:12:57 +0000</lastBuildDate><atom:link href="https://joekbullard.github.io/tags/postgis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Subdivide and Conquer</title>
      <link>https://joekbullard.github.io/posts/subdivide-and-conquer/</link>
      <pubDate>Mon, 21 Nov 2022 01:12:57 +0000</pubDate>
      
      <guid>https://joekbullard.github.io/posts/subdivide-and-conquer/</guid>
      <description>Dealing with large and complex geometries in postgis can be computationally expensive, even with a spatial index. To understand why this is we need to have some understanding of how a spatial index works. In simple terms, a spatial index is a bounding box that encapsulates the extent of a geometry, using a spatial index can rapidly speed up spatial processing by first checking which bounding boxes intersect - a comparatively quick process - as opposed to which raw geometries intersect - potentially a lot slower - and more so as the size of your dataset increases.</description>
    </item>
    
  </channel>
</rss>
