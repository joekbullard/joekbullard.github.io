<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>30daymapchallenge on Joe k Bullard</title>
    <link>https://joekbullard.github.io/tags/30daymapchallenge/</link>
    <description>Recent content in 30daymapchallenge on Joe k Bullard</description>
    <image>
      <url>https://joekbullard.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://joekbullard.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 10 Nov 2023 09:47:30 +0000</lastBuildDate><atom:link href="https://joekbullard.github.io/tags/30daymapchallenge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Day 10 - North America</title>
      <link>https://joekbullard.github.io/posts/mapchallenge-day10/</link>
      <pubDate>Fri, 10 Nov 2023 09:47:30 +0000</pubDate>
      
      <guid>https://joekbullard.github.io/posts/mapchallenge-day10/</guid>
      <description>Pretty simple one for today, NBN occurence records of one of the most notorious of US imports, the Eastern Grey Squirrel. As is often the case with biological records, the data is heavily skewed by survey effort. This is the first time I&amp;rsquo;ve used the Datashader library, it&amp;rsquo;s a useful visualisation tool when working with large datasets that would be impractical to plot as vectors. It works with plotly as below but seems easier to use with GeoViews/HoloViews and Bokeh.</description>
    </item>
    
    <item>
      <title>Day 4 - A bad map</title>
      <link>https://joekbullard.github.io/posts/mapchallenge-day4/</link>
      <pubDate>Sun, 05 Nov 2023 22:43:36 +0000</pubDate>
      
      <guid>https://joekbullard.github.io/posts/mapchallenge-day4/</guid>
      <description>Not the finest of creations, but I guess that&amp;rsquo;s the point. Pretty simple really, this map shows the location of all villages/towns/cities that are named &amp;ldquo;Bad&amp;rdquo;. For a reason I can&amp;rsquo;t quite figure out, Switzerland seems to be the baddest of them all. import geopandas as gpd import plotly.express as px import requests from shapely.geometry import Point overpass_url = &amp;#34;http://overpass-api.de/api/interpreter&amp;#34; overpass_query = &amp;#34;&amp;#34;&amp;#34; [out:json]; ( node[&amp;#34;place&amp;#34;=&amp;#34;city&amp;#34;][&amp;#34;name&amp;#34;~&amp;#34;^Bad$&amp;#34;]; node[&amp;#34;place&amp;#34;=&amp;#34;town&amp;#34;][&amp;#34;name&amp;#34;~&amp;#34;^Bad$&amp;#34;]; node[&amp;#34;place&amp;#34;=&amp;#34;village&amp;#34;][&amp;#34;name&amp;#34;~&amp;#34;^Bad$&amp;#34;]; node[&amp;#34;place&amp;#34;=&amp;#34;hamlet&amp;#34;][&amp;#34;name&amp;#34;~&amp;#34;^Bad$&amp;#34;]; node[&amp;#34;place&amp;#34;=&amp;#34;isolated_dwelling&amp;#34;][&amp;#34;name&amp;#34;~&amp;#34;^Bad$&amp;#34;]; ); out center; &amp;#34;&amp;#34;&amp;#34; response = requests.</description>
    </item>
    
  </channel>
</rss>
