<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>docker on Joe k Bullard</title>
    <link>https://joekbullard.github.io/tags/docker/</link>
    <description>Recent content in docker on Joe k Bullard</description>
    <image>
      <url>https://joekbullard.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://joekbullard.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 23 Jul 2023 22:32:05 +0100</lastBuildDate><atom:link href="https://joekbullard.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using docker with Gdal</title>
      <link>https://joekbullard.github.io/posts/docker-gdal/</link>
      <pubDate>Sun, 23 Jul 2023 22:32:05 +0100</pubDate>
      
      <guid>https://joekbullard.github.io/posts/docker-gdal/</guid>
      <description>Note - this assumes you have docker installed and are broadly familiar with using it from the command line.
Anyone who works with GIS will be familiar with the Geospatial Data Abstraction Library, or GDAL as it&amp;rsquo;s more commonly know. It&amp;rsquo;s the swiss army knife of GIS tools - allowing users to read, write and convert between numerous raster and vector formats. For those who aren&amp;rsquo;t familiar there are plenty of resources around that give an introduction, a good place to start is the official GDAL tutorial page.</description>
    </item>
    
    <item>
      <title>Docker Geoserver Part 1</title>
      <link>https://joekbullard.github.io/posts/docker-geoserver-part-1/</link>
      <pubDate>Mon, 21 Nov 2022 01:22:15 +0000</pubDate>
      
      <guid>https://joekbullard.github.io/posts/docker-geoserver-part-1/</guid>
      <description>This is the first in a small series that will go through the process of compiling an open source spatial stack to store, serve and visualise spatial data. Given we will be working with a number of containers it is beneficial to work with docker-compose.
Note: While it is possible to use Postgres in a docker container, this is not recommended for production purposes. A managed service such as AWS RDS is a better option in these instances.</description>
    </item>
    
  </channel>
</rss>
